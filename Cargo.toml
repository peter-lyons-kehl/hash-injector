[package]
name = "hash-injector"
version = "0.0.1-alpha"
edition = "2024"

license = "BSD-2-Clause OR Apache-2.0 OR MIT"
rust-version = "1.85.0"

authors = ["Peter Lyons Kehl<peter.kehl@gmail.com>"]
description = "Hasher+BuildHasher to inject particular hash"

categories = ["algorithms", "data-structures", "no-std", "rust-patterns"]

keywords = ["cache", "lru", "hashmap", "data-structures"]

repository = "https://github.com/peter-lyons-kehl/hash-injector"
homepage = "https://github.com/peter-lyons-kehl/hash-injector"

[dependencies]
ndd = { version = "0.*", optional = true, path="../ndd" }

[lints.rust]
unexpected_cfgs = { level = "forbid"}

[features]

# Using Mutex and its `data_ptr` function to get signalling slices. It requires "std" library. It
# involves trivial unsafe code, used only for creation of static signalling string slices/pointers.
# This enables
# - "u8 slice"-based signalling, protocol flags in flags::new::u8s
# - "str" signalling, protocol flags in flags::new::str - if "hpe" feature is enabled, too. That
#   requires nightly.
#
# This requires `std`. To achieve the same zero-cost functionality, but without `std`, use `ndd`
# feature instead.
#
# Do not use `mx` and `ndd` features together.
mx = []

# Using ndd::NonDeDuplicated. Equivalent to `mx` feature, but this is `no_std`-compatible.
#
# Do not use `mx` and `ndd` features together.
ndd = ["dep:ndd"]

# Using Rust feature "hasher_prefixfree_extras": https://github.com/rust-lang/rust/issues/96762.
# This enables
# - "prefix length"-based signalling, protocol flags in flags::new::len
# - "str" signalling, through protocol flags in flags::new::str - if "mx" or "ndd" feature is
#   enabled, too.
#
# Both require nightly.
hpe = []

# Whether to use a higher level type for the const generic parameter type ProtocolFlags. Requires
# nightly toolchain. This feature CAN be used with incompatible Hashers, too.
flags = []

# Use to check that the Hasher is (or behaves like) `SignalledInjectionHasher`. Use only if the
# types that inject hashes (that is, types whose hash(...) calls `signal_inject_hash()`), are never
# to be used with any incompatible Hasher.
#
# (Potentially) expensive ONLY if types whose hash(...) calls hash_injector::inject(...) are used
# with other hashers.
chk-hash = []

# Check that signal_first(F) for const generic parameter F is the same between
# `signal_inject_hash(...)` and `SignalledInjectionHasher`. This feature CAN be used with
# incompatible Hashers, too.
#
# NOT very expensive.
chk-flow = []

# Asserts (in either debug and release mode). Expensive.
chk = []

# Extra details in asserts. Requiring nightly.
chk-details = ["chk"]

# Some combinations of features. Do leave trailing spaces on empty lines, for up & down navigation.
#                                                           
#           Logic/          |         Checks:
#           functionality:  |
#                           | Cheap:      Expensive:
#default = [                                                                           ]
#default = [                               "chk-flow"                                  ]
#default = [                                           "chk-hash"                      ]
#default = [                                                       "chk"               ]
#default = [                                                       "chk", "chk-details"]
#default = [                               "chk-flow", "chk-hash", "chk", "chk-details"]
#default = [                      "flags"                                              ]
#default = [                      "flags", "chk-flow"                                  ]
#default = [                      "flags",             "chk-hash"                      ]
#default = [                      "flags",                         "chk", "chk-details"]
#default = [                      "flags", "chk-flow", "chk-hash", "chk", "chk-details"]
#                                                                                       
#default = [  "mx"                                                                     ]
#default = [        "ndd",                                                             ]
#default = [  "mx",                        "chk-flow"                                  ]
#default = [        "ndd",                 "chk-flow"                                  ]
#default = [  "mx",                                    "chk-hash"                      ]
#default = [        "ndd",                             "chk-hash"                      ]
#default = [  "mx",                                                "chk", "chk-details"]
#default = [        "ndd",                                         "chk", "chk-details"]
#default = [  "mx",                        "chk-flow", "chk-hash", "chk", "chk-details"]
#default = [        "ndd",                 "chk-flow", "chk-hash", "chk", "chk-details"]
#                                                                                       
#default = [  "mx",               "flags"                                              ]
#default = [        "ndd",        "flags"                                              ]
#default = [  "mx",               "flags", "chk-flow"                                  ]
#default = [        "ndd",        "flags", "chk-flow"                                  ]
#default = [  "mx",               "flags",             "chk-hash"                      ]
#default = [        "ndd",        "flags",             "chk-hash"                      ]
#default = [  "mx",               "flags",                         "chk", "chk-details"]
#default = [        "ndd",        "flags",                         "chk", "chk-details"]
#                                                                                       
#default = [        "hpe",                 "chk-flow"                                  ]
#default = [        "hpe",                             "chk-hash"                      ]
#default = [        "hpe",                                         "chk", "chk-details"]
#default = [        "hpe",                 "chk-flow", "chk-hash", "chk", "chk-details"]
#default = [        "hpe",        "flags"                                              ]
#default = [        "hpe",        "flags", "chk-flow",                                 ]
#default = [        "hpe",        "flags",             "chk-hash",        "chk-details"]
#default = [        "hpe",        "flags",                         "chk", "chk-details"]
#default = [        "hpe",        "flags", "chk-flow", "chk-hash", "chk", "chk-details"]
#                                                                                       
#default = [  "mx",        "hpe",                                                      ]
#default = [        "ndd", "hpe",                                                      ]
#default = [  "mx",        "hpe",          "chk-flow", "chk-hash", "chk", "chk-details"]
#default = [        "ndd", "hpe",          "chk-flow", "chk-hash", "chk", "chk-details"]
#default = [  "mx",        "hpe", "flags"                                              ]
#default = [        "ndd", "hpe", "flags"                                              ]
#default = [  "mx",        "hpe", "flags", "chk-flow", "chk-hash", "chk"               ]
#default = [        "ndd", "hpe", "flags", "chk-flow", "chk-hash", "chk"               ]
#default = [  "mx",        "hpe", "flags", "chk-flow", "chk-hash", "chk", "chk-details"]
#default = [        "ndd", "hpe", "flags", "chk-flow", "chk-hash", "chk", "chk-details"]
