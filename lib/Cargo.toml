[package]
name = "hash-injector"
version = "0.1.0"
edition = "2024"

license = "BSD-2-Clause OR Apache-2.0 OR MIT"
rust-version = "1.85.0"

authors = ["Peter Lyons Kehl<peter.kehl@gmail.com>"]
description = "Hasher+BuildHasher to inject particular hash"

categories = ["algorithms", "data-structures", "no-std", "rust-patterns"]

keywords = ["cache", "lru", "hashmap", "data-structures"]

repository = "https://github.com/peter-lyons-kehl/hash-injector"
homepage = "https://github.com/peter-lyons-kehl/hash-injector"
readme = "../README.md"

[dependencies]

[lints.rust]
unexpected_cfgs = { level = "forbid"}

[features]

# TODO Serde

# Expensive
asserts = []

# Whether to use a higher level type for the const generic parameter type ProtocolFlags.
flags-type = []

# Use to check that the Hasher is (or behaves like) `SignalledInjectionHasher`. Use only if the
# types that inject hashes (that is, types whose hash(...) calls `signal_inject_hash()`), are never
# to be used with any incompatible Hasher.
#
# Expensive depending on
# - the underlying Hasher (its `finish(self)`), or
# - the "original" hashed type containing (directly or indirectly) arrays or slices, especially if
#   multiple.
check-finish = []

# Check that signal)first(F) for const generic F is the same between `signal_inject_hash(...)` and
# `SignalledInjectionHasher`.
#
# Use ONLY if check-finish is enabled, too.
#
# NOT much more expensive than check-finish.
check-protocol = []

#default = [              "asserts"]
#default = [              "asserts", "check-finish"]

# NOT allowed:
#default = [                                         "check-protocol"]
# NOT allowed:
#default = [              "asserts",                 "check-protocol"]

#default = [              "asserts", "check-finish", "check-protocol"]

#default = ["flags-type"]
#default = ["flags-type", "asserts"]
#default = ["flags-type", "asserts", "check-finish"]

# NOT allowed:
#default = ["flags-type",                            "check-protocol"]
# NOT allowed:
#default = ["flags-type", "asserts",                 "check-protocol"]

# ALL features:
# default = ["flags-type", "asserts", "check-finish", "check-protocol"]
