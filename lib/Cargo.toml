[package]
name = "hash-injector"
version = "0.1.0"
edition = "2024"

license = "BSD-2-Clause OR Apache-2.0 OR MIT"
rust-version = "1.85.0"

authors = ["Peter Lyons Kehl<peter.kehl@gmail.com>"]
description = "Hasher+BuildHasher to inject particular hash"

categories = ["algorithms", "data-structures", "no-std", "rust-patterns"]

keywords = ["cache", "lru", "hashmap", "data-structures"]

repository = "https://github.com/peter-lyons-kehl/hash-injector"
homepage = "https://github.com/peter-lyons-kehl/hash-injector"
readme = "../README.md"

[dependencies]

[lints.rust]
unexpected_cfgs = { level = "forbid"}

[features]

# TODO Serde

# Whether to implement From<String> for SignalStrs, so that the consumer can provide her/his own
# String that is used for string slices when signalling. It requires "alloc" library.
string = []

# Expensive
asserts = []

# Whether to use a higher level type for the const generic parameter type ProtocolFlags. Requires nightly toolchain.
flags-type = []

# Use to check that the Hasher is (or behaves like) `SignalledInjectionHasher`. Use only if the
# types that inject hashes (that is, types whose hash(...) calls `signal_inject_hash()`), are never
# to be used with any incompatible Hasher.
#
# Expensive depending on
# - the underlying Hasher (its `finish(self)`), or
# - the "original" hashed type containing (directly or indirectly) arrays or slices, especially if
#   multiple.
check-hash = []

# Check that signal)first(F) for const generic F is the same between `signal_inject_hash(...)` and
# `SignalledInjectionHasher`.
#
# NOT very expensive.
check-flow = []

# Using Mutex's data_ptr function to get signalling string slices. It requires "std" library and
# nightly toolchain.
#
# It requires "unsafe" feature, but it does NOT imply/include it. That forces the consumer to
# confirm that she/he wants unsafe code.
ptr = []

# Using LazyLock. It requires "std" library, but it uses safe code. Slower than Mutex with "ptr"
# feature.
lazy = []

# Whether to use unsafe. It's used only for creation of static signalling string slices.
unsafe = []

# Some combinations of features. Do leave spaces on empty lines, for up & down navigation.
#default = [                        "asserts"]
#default = ["string",               "asserts"]
#default = [                        "asserts", "check-hash"]
                                                                                                     
#default = [                                                   "check-flow"]
                                                                                                      
#default = [                        "asserts",                 "check-flow"]
#default = [                        "asserts",                                   "ptr",              "unsafe"]
#default = [                        "asserts",                                               "lazy"]
#default = [                        "asserts",                                   "ptr", "lazy", "unsafe"]
#default = [                        "asserts",                 "check-flow", "ptr",              "unsafe"]
#default = [                        "asserts",                 "check-flow",             "lazy"]

#default = [                        "asserts", "check-hash", "check-flow"]
#default = [                        "asserts", "check-hash", "check-flow", "ptr", "unsafe"]
#default = ["string",               "asserts", "check-hash", "check-flow"]

#default = [          "flags-type"]
#default = [          "flags-type", "asserts"]
#default = [          "flags-type", "asserts", "check-hash"]
                                                                                                     
#default = [          "flags-type",                            "check-flow"]
#default = [          "flags-type",                            "check-flow"]
#default = ["string", "flags-type",                            "check-flow"]
#default = ["string", "flags-type",            "check-hash", "check-flow"]
                                                                                                     
#default = ["string", "flags-type",                            "check-flow", "ptr", "unsafe"]
#default = ["string", "flags-type",            "check-hash", "check-flow", "ptr", "unsafe"]
                                                                                                     
#default = ["string", "flags-type", "asserts",                 "check-flow"]
#default = ["string", "flags-type", "asserts", "check-hash", "check-flow"]
                                                                                                     
# ALL features:
default = ["string",  "flags-type", "asserts", "check-hash", "check-flow", "ptr", "lazy", "unsafe"]
