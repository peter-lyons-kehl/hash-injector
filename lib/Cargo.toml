[package]
name = "hash-injector"
version = "0.1.0"
edition = "2024"

license = "BSD-2-Clause OR Apache-2.0 OR MIT"
rust-version = "1.85.0"

authors = ["Peter Lyons Kehl<peter.kehl@gmail.com>"]
description = "Hasher+BuildHasher to inject particular hash"

categories = ["algorithms", "data-structures", "no-std", "rust-patterns"]

keywords = ["cache", "lru", "hashmap", "data-structures"]

repository = "https://github.com/peter-lyons-kehl/hash-injector"
homepage = "https://github.com/peter-lyons-kehl/hash-injector"
readme = "../README.md"

[dependencies]
# ???
# parking_lot
# lock_api
# spin
# no_mutex
# critical-section

[lints.rust]
unexpected_cfgs = { level = "forbid"}

[features]

# TODO Serde

# Asserts (in either debug and release mode). Expensive.
chk = []

# Whether to use a higher level type for the const generic parameter type ProtocolFlags. Requires
# nightly toolchain. This feature CAN be used with incompatible Hashers, too.
flags = []

# Use to check that the Hasher is (or behaves like) `SignalledInjectionHasher`. Use only if the
# types that inject hashes (that is, types whose hash(...) calls `signal_inject_hash()`), are never
# to be used with any incompatible Hasher.
#
# (Potentially) expensive ONLY if types whose hash(...) calls hash_injector::inject(...) are used
# with other hashers.
chk-hash = []

# Check that signal_first(F) for const generic parameter F is the same between
# `signal_inject_hash(...)` and `SignalledInjectionHasher`. This feature CAN be used with
# incompatible Hashers, too.
#
# NOT very expensive.
chk-flow = []

# Using Mutex and its data_ptr function to get signalling string slices. It requires "std" library.
# It involves trivial unsafe code, used only for creation of static signalling string
# slices/pointers.
mx = []


# Some combinations of features. Do leave trailing spaces on empty lines, for up & down navigation.
#                                                           
#           Logic/          |         Checks:
#           functionality:  |
#                           | Cheap:      Expensive:
#default = [                                               ]
#default = [                  "chk-flow"                   ]
#default = [                              "chk-hash"       ]
#default = [                                          "chk"]
#default = [                  "chk-flow", "chk-hash", "chk"]
#default = [         "flags"                               ]
#default = [         "flags", "chk-flow"                   ]
#default = [         "flags",             "chk-hash"       ]
#default = [         "flags",                         "chk"]
#default = [         "flags", "chk-flow", "chk-hash", "chk"]
#                                                           
#default = [  "mx"                                         ]
#default = [  "mx",           "chk-flow"                   ]
#default = [  "mx",                       "chk-hash"       ]
#default = [  "mx",                                   "chk"]
#default = [  "mx",           "chk-flow", "chk-hash", "chk"]
#default = [  "mx",  "flags"                               ]
#default = [  "mx",  "flags", "chk-flow"                   ]
#default = [  "mx",  "flags",             "chk-hash"       ]
#default = [  "mx",  "flags",                         "chk"]
#default = [  "mx",  "flags", "chk-flow", "chk-hash", "chk"]
