[package]
name = "hash-injector"
version = "0.1.0"
edition = "2024"

license = "BSD-2-Clause OR Apache-2.0 OR MIT"
rust-version = "1.85.0"

authors = ["Peter Lyons Kehl<peter.kehl@gmail.com>"]
description = "Hasher+BuildHasher to inject particular hash"

categories = ["algorithms", "caching", "data-structures"]

keywords = ["cache", "lru", "hashmap", "data-structures"]

[dependencies]

[lints.rust]
unexpected_cfgs = { level = "forbid"}

[features]
# Expensive
asserts = []

# Use to check that the Hasher is (or behaves like) SignalledInjectionHasher. Use only if the types
# that inject hashes are never to be used with any incompatible Hasher.
#
# Expensive
injector_checks_finish = []

# Check that EXTRA_FLOW const generic is the same between signal_inject_hash(...) and SignelledInjectionHasher.
#
# Use ONLY if injector_checks_finish is enabled, too.
#
# Expensive.
injector_checks_same_flow = []

#default = ["asserts"]
#default = ["asserts", "injector_checks_finish"]

# NOT allowed - because injector_checks_same_flow requires injector_checks_finish, too.
#default = [                                     "injector_checks_same_flow"]
# NOT allowed - because injector_checks_same_flow requires injector_checks_finish, too.
#default = ["asserts",                           "injector_checks_same_flow"]

default = ["asserts", "injector_checks_finish", "injector_checks_same_flow"]
